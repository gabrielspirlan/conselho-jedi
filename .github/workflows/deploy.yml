name: CI/CD Pipeline - Deploy Remoto

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build e Push da Imagem Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build e Push da imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jedi-api:latest

  deploy:
    name: Deploy Remoto via Docker Run
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy e Verificação no Servidor Remoto
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # --- 1. DEFINIÇÃO DE VARIÁVEIS ---
            APP_IMAGE="gabrielspirlan/jedi-api:latest"
            DB_CONTAINER="postgres_starwars"
            APP_CONTAINER="jedi-api"
            NETWORK_NAME="jedi-network"

            # --- 2. PREPARAÇÃO DO AMBIENTE ---
            docker network create $NETWORK_NAME || true
            echo "Removendo contêineres antigos..."
            docker stop $APP_CONTAINER || true
            docker rm $APP_CONTAINER || true
            docker stop $DB_CONTAINER || true
            docker rm $DB_CONTAINER || true
            echo "Baixando imagens mais recentes..."
            docker pull $APP_IMAGE
            docker pull postgres:15

            # --- 3. INICIAR O BANCO DE DADOS ---
            echo "Iniciando contêiner do PostgreSQL..."
            docker run -d \
              --name $DB_CONTAINER \
              --network $NETWORK_NAME \
              --restart always \
              -e POSTGRES_DB=StarWars \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=1234 \
              -p 5544:5432 \
              -v postgres_data:/var/lib/postgresql/data \
              postgres:15

            echo "Aguardando o banco de dados iniciar..."
            sleep 15

            # --- 4. INICIAR A APLICAÇÃO ---
            echo "Iniciando contêiner da aplicação..."
            docker run -d \
              --name $APP_CONTAINER \
              --network $NETWORK_NAME \
              --restart always \
              -p 8108:8108 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_starwars:5432/StarWars \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=1234 \
              -e SPRING_FLYWAY_BASELINE_ON_MIGRATE=true \
              $APP_IMAGE

            # --- 5. VERIFICAÇÃO FINAL ---
            echo "Deploy concluído!"
            echo "Aguardando 3 minutos para estabilização dos serviços..."
            sleep 180

            echo "-----------------------------------------------------"
            echo "Verificando contêineres em execução no servidor..."
            docker ps
            echo "-----------------------------------------------------"